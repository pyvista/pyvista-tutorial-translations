
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorial/09_trame/e_trame_algorithm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorial_09_trame_e_trame_algorithm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorial_09_trame_e_trame_algorithm.py:


Using VTK, PyVista, and Trame
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This example demonstrates how to use VTK, PyVista, and Trame together
to show how the three libraries complement each other.

.. GENERATED FROM PYTHON SOURCE LINES 8-63

.. code-block:: default


    import pyvista as pv
    from pyvista.trame.ui import plotter_ui
    from trame.app import get_server
    from trame.ui.vuetify import SinglePageLayout
    from trame.widgets import vuetify
    from vtkmodules.vtkFiltersSources import vtkConeSource

    pv.OFF_SCREEN = True

    server = get_server()
    state, ctrl = server.state, server.controller

    source = vtkConeSource()

    pl = pv.Plotter()
    pl.add_mesh(source, color='seagreen')


    @state.change("resolution")
    def update_contour(resolution, **kwargs):
        source.SetResolution(int(resolution))
        ctrl.view_update()


    with SinglePageLayout(server) as layout:
        with layout.toolbar:
            vuetify.VSpacer()
            vuetify.VSlider(
                v_model=("resolution", 15),
                min=5,
                max=30,
                hide_details=True,
                dense=True,
                style="max-width: 300px",
                change=ctrl.view_update,
            )
            vuetify.VProgressLinear(
                indeterminate=True,
                absolute=True,
                bottom=True,
                active=("trame__busy",),
            )

        with layout.content:
            with vuetify.VContainer(
                fluid=True,
                classes="pa-0 fill-height",
            ):
                # Use PyVista UI template for Plotters
                view = plotter_ui(pl)
                ctrl.view_update = view.update

    server.start()


.. GENERATED FROM PYTHON SOURCE LINES 64-71

.. raw:: html

    <center>
      <a target="_blank" href="https://colab.research.google.com/github/pyvista/pyvista-tutorial/blob/gh-pages/notebooks/tutorial/09_trame/e_trame_algorithm.ipynb">
        <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/ width="150px">
      </a>
    </center>


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_tutorial_09_trame_e_trame_algorithm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/pyvista/pyvista-tutorial/gh-pages?urlpath=lab/tree/notebooks/tutorial/09_trame/e_trame_algorithm.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: e_trame_algorithm.py <e_trame_algorithm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: e_trame_algorithm.ipynb <e_trame_algorithm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
